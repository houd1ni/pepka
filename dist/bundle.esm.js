const e=e=>typeof e,r=e=>null===e,t=(n,c)=>{if("object"===e(n)&&"object"===e(c)){if(r(n)||r(c))return n===c;for(let e of[n,c])for(let r in e)if(!t(n[r],c[r]))return!1}},n=(e,r,t)=>(r.push(...t),r.length<e.length?(...t)=>n(e,r,t):e(...r,...t)),c=e=>(...r)=>n(e,[],r),l=e=>{const t=typeof e;return"object"==t?f(e)?"Array":r(e)?"Null":"Object":t[0].toUpperCase()+t.slice(1)},o=c((e,r)=>t=>e(t)?r(t):t),u=(...e)=>r=>{for(let t=s(e)-1;t>-1;t--)r=e[t](r);return r},a=c(t),f=e=>Array.isArray(e),i=e=>r(e)||(e=>void 0===e)(e),s=e=>e.length,p=e=>()=>e,j=()=>e=>e,y=e=>e.trim(),b=c((e,r)=>r.join(e)),h=e=>r=>!e(r),g=c((e,r)=>r.map(e)),A=c((e,r)=>r.filter(e)),O=c((e,r)=>r.forEach(e)),d=c((e,r,t)=>r(t)&&e(t)),m=e=>{switch(l(e)){case"String":return""==e;case"Array":return 0==s(e);case"Null":return!1;case"Object":return 0==s(Object.keys(e));default:return!1}},N=c((e,r,t)=>t.replace(e,r));export{p as always,d as both,h as complement,u as compose,c as curry,a as equals,A as filter,O as forEach,j as identity,f as isArray,m as isEmpty,i as isNil,b as join,s as length,g as map,N as replace,y as trim,l as type,o as when};
