const e=e=>typeof e,r=e=>null===e,t=r=>"number"==e(r),c=(e,r,t)=>r.length+t.length<e.length?(...t)=>c(e,[...r,...t],t):e(...r,...t),n=e=>(...r)=>c(e,r,[]),l=n((t,c)=>{if("object"==e(t)&&"object"==e(c)){if(r(t)||r(c))return t===c;for(let e of[t,c])for(let r in e)if(!l(t[r],c[r]))return!1}return t===c}),u=n((e,r,t,c)=>e(c)?r(c):t(c)),s=n((e,r,t)=>u(e,r,j,t)),o=(...e)=>r=>{for(let t=f(e)-1;t>-1;t--)r=e[t](r);return r},a=e=>n((r,t)=>e(t,r)),i=e=>r(e)||(e=>void 0===e)(e),f=e=>e.length,b=e=>()=>e,j=e=>e,h=e=>e.trim(),y=e=>e[0],g=e=>e[e.length-1],O=e=>r=>!e(r),p=e=>Object.keys(e),A=e=>Object.values(e),d=e=>Object.entries(e),m=e=>r=>(e(r),r),v=(e,r="log")=>m(t=>console[r](e,t)),w=n((e,r,c)=>c.slice(e,t(r)?r:1/0)),N=n((e,r,t)=>({...t,[e]:r})),k=n((e,r)=>r[e]),x=n((e,r,t)=>u(f,o(u(i,b(e),t=>x(e,w(1,null,r),t)),a(k)(t),y),b(t))(r)),C=x(void 0),E=r=>{switch(e(r)){case"object":switch(F(r)){case"Null":return r;case"Array":return z(E,r);case"Object":const e={};for(let t in r)e[t]=E(r[t]);return e}default:return r}},S=n((e,r,t)=>t.reduce(e,E(r))),U=e=>S((e,r)=>N(...r,e),{},e),q=n((e,r)=>r.join(e)),z=n((e,r)=>r.map(e)),B=n((e,r)=>r.forEach(e)),D=n((e,r,t)=>r(t)&&e(t)),F=t=>{const c=e(t);return"object"==c?(e=>Array.isArray(e))(t)?"Array":r(t)?"Null":"Object":c[0].toUpperCase()+c.slice(1)},G=e=>{switch(F(e)){case"String":return""==e;case"Array":return 0==f(e);case"Null":return!1;case"Object":return 0==f(Object.keys(e));default:return!1}},H=n((e,r,t)=>t.replace(e,r)),I=n((e,r)=>u(o(l("Array"),F),r=>r.filter(e),o(U,I(([r,t])=>e(t,r)),d))(r));export{b as always,N as assoc,D as both,E as clone,O as complement,o as compose,n as curry,l as equals,v as explore,I as filter,a as flip,B as forEach,U as fromPairs,y as head,j as identity,u as ifElse,G as isEmpty,i as isNil,q as join,p as keys,g as last,f as length,z as map,C as path,x as pathOr,k as prop,S as reduce,H as replace,w as slice,m as tap,d as toPairs,h as trim,F as type,A as values,s as when};
