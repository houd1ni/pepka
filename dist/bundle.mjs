const e=Symbol("Placeholder"),r=r=>{let t=0;for(const n of r)n!==e&&t++;return t},t=(r,t)=>{const n=r.length,s=r.slice(),c=t.length;let o=c,u=0;for(;o&&u<n;u++)s[u]===e&&(s[u]=t[c-o],o--);for(u=n;o;u++,o--)s[u]=t[c-o];return s},n=(e,s,c)=>{const o=e.length-s.length-r(c);if(o<1)return e(...t(s,c));{const r=(...r)=>n(e,t(s,c),r);return r.$args_left=o,r}},s=e=>(...t)=>e.length>r(t)?n(e,[],t):e(...t),c=r=>function(t){return t===e?r:r(t)};function o(r){return function(t,n){const s=t===e,o=arguments.length;if(1===o&&s)throw new Error("Senseless placeholder usage.");return arguments.length>1?s?c((e=>r(e,n))):r(t,n):e=>r(t,e)}}function u(e){return s(e)}const a=void 0,i=1/0,l=e=>typeof e,f=e=>null===e,h=e=>"number"==l(e),b=e=>Array.isArray(e),g=e=>"function"===l(e),p={u:"U",b:"B",n:"N",s:"S",f:"F"},y=e=>e.toLowerCase(),d=e=>e.toUpperCase(),j=e=>{const r=l(e);return"object"===r?f(e)?"Null":e.constructor.name:p[r[0]]+r.slice(1)},m=o(((e,r)=>j(r)===e)),w=o(((e,r)=>(r.push(e),r))),O=u(((e,r,t)=>(t[e]=r,t))),A=u(((e,r,t)=>t.reduce(e,r))),S=u(((e,r,t)=>{for(let n in t)switch(j(t[n])){case"Array":if(e>1&&"Array"===j(r[n]))switch(e){case 2:const s=r[n],c=t[n];for(const r in c)s[r]?S(e,s[r],c[r]):s[r]=c[r];break;case 3:r[n].push(...t[n])}else r[n]=t[n];break;case"Object":if("Object"===j(r[n])){S(e,r[n],t[n]);break}default:r[n]=t[n]}return r})),k=S(1),v=S(2),N=S(3),x=o(((e,r)=>{for(let t in r)e[t]=r[t];return e})),C=o(((e,r)=>{let t,n,s,c;for(t in e)n=e[t],[s,c]=g(n)?n(r):[n,r[t]],r[s]=c,t!==s&&delete r[t];return r})),E=o(((e,r)=>{for(let t in r)r[t]=e(r[t],+t,r);return r})),P=o(((e,r)=>{const t=b(r);for(let n in r)e(r[n],n)||(t?r.splice(n,1):delete r[n]);return r})),$=o(((e,r)=>r.indexOf(e))),B=e=>(...r)=>A(((e,r)=>e?e(r):e),e,r),U=e=>(...r)=>r[e],_=o(((e,r)=>{const t=j(e);if(t===j(r)&&("Object"===t||"Array"==t)){if(f(e)||f(r))return e===r;if(e===r)return!0;for(const t of[e,r])for(const n in t)if(!(t===r&&n in e||t===e&&n in r&&_(e[n],r[n])))return!1;return!0}return e===r})),F=s(((e,r,t,n)=>e(n)?r(n):t(n))),I=u(((e,r,t)=>F(e,r,Y,t))),L=(...r)=>(...t)=>{let n,s=!0;for(let c=W(r)-1;c>-1;c--)s?(s=!1,n=r[c](...t)):n=n===e?r[c]():r[c](n);return n},q=o(((e,r)=>e.bind(r))),z=o(((e,r)=>r[e])),D=o(((e,r)=>{if((e=>"string"===l(e))(r))return r.includes(e);for(const t of r)if(_(t,e))return!0;return!1})),G=u(((e,r,t)=>t.slice(e,h(r)?r:i))),H=e=>o(((r,t)=>e(t,r))),J=z(0),K=G(1,i),M=o(((e,r)=>e+r)),Q=o(((e,r)=>r-e)),R=o(((e,r)=>e*r)),T=o(((e,r)=>e/r)),V=e=>f(e)||(e=>e===a)(e),W=e=>e.length,X=e=>()=>e,Y=e=>e,Z=e=>e.trim(),ee=e=>e[W(e)-1],re=e=>!e,te=e=>(...r)=>{const t=e(...r),n=g(t);return!n||n&&t.$args_left<=0?re(t):te(t)},ne=e=>Object.keys(e),se=e=>Object.values(e),ce=e=>Object.entries(e),oe=o(((e,r)=>e.test(r))),ue=o(((e,r)=>(e(r),r))),ae=o(((e,r)=>[...r,e])),ie=o(((e,r)=>r.split(e))),le=X(!0),fe=X(!1),he=o(((e,r)=>r(...e))),be=(...e)=>{},ge=e=>{if("Object"===j(e)){let r=0;for(let t in e)r++;return r}return W(e)},pe=o(((e,r)=>je(M(e),r-e))),ye=e=>A(((e,r)=>D(r,e)?e:w(r,e)),[],e),de=o(((e,r)=>e.filter(H(D)(r)))),je=o(((e,r)=>[...Array(r)].map(((r,t)=>e(t))))),me=e=>{let r,t=!1;return(...n)=>t?r:(t=!0,r=e(...n))},we=e=>L((r=>Re(((t,n,s)=>w(e[r-s],t)),[],e)),M(-1),W)(e),Oe=o(((e,r)=>e>r)),Ae=o(((e,r)=>e<r)),Se=o(((e,r)=>r>=e)),ke=o(((e,r)=>r<=e)),ve=o(((e,r)=>r.sort(e))),Ne=o(((e,r)=>r.find(e))),xe=o(((e,r)=>r.findIndex(e))),Ce=o(((e,r)=>xe(_(e),r))),Ee=(e,r="log")=>ue((t=>console[r](e,t))),Pe=o(((e,r)=>{for(const[t,n]of e)if(t(r))return n(r)})),$e=u(((e,r,t)=>({...t,[e]:r}))),Be=u(((e,r,t)=>L((n=>{return $e(n,W(e)<2?r:Be(G(1,i,e),r,(s=t[n],f(s)||"object"!==l(s)?{}:t[n])),t);var s}),J)(e))),Ue=o(((e,r)=>r.every(e))),_e=o(((e,r)=>r.some(e))),Fe=o(((e,r)=>e.every((e=>e(r))))),Ie=o(((e,r)=>e.some((e=>e(r))))),Le=o(((e,r)=>r[e])),qe=u(((e,r,t)=>_(t[e],r))),ze=u(((e,r,t)=>_(r[e],t[e]))),De=u(((e,r,t)=>F(W,(()=>V(t)?e:L(F(V,X(e),(t=>De(e,G(1,i,r),t))),H(Le)(t),J)(r)),X(t),r))),Ge=De(a),He=u(((e,r,t)=>_(Ge(e,t),r))),Je=u(((e,r,t)=>_(Ge(e,r),Ge(e,t)))),Ke=/^(.*?)(8|16|32|64)(Clamped)?Array$/,Me=(e,r=!1)=>{const t=j(e);switch(t){case"Null":case"String":case"Number":case"Boolean":case"Symbol":return e;case"Array":return r?[...e]:er(L(Me,U(0)),e);case"Object":if(r)return{...e};const n={};for(let r in e)n[r]=Me(e[r]);return n;default:return Ke.test(t)?e.constructor.from(e):e}},Qe=e=>Me(e,!0),Re=u(((e,r,t)=>A(e,Me(r),t))),Te=o(((e,r)=>or(e,r))),Ve=o(((e,r)=>{const t={};for(const n of e)n in r&&(t[n]=r[n]);return t})),We=o(((e,r)=>or(((r,t)=>!D(t,e)),r))),Xe=e=>Object.fromEntries(e),Ye=o(((e,r)=>r.concat(e))),Ze=o(((e,r)=>r.join(e))),er=o(((e,r)=>r.map(e))),rr=o(((e,r)=>r.forEach(e))),tr=u(((e,r,t)=>r(t)&&e(t))),nr=e=>{switch(j(e)){case"String":case"Array":return 0==W(e);case"Object":for(const r in e)return!1;return!0;default:return null}},sr=e=>{switch(j(e)){case"String":return"";case"Object":return{};case"Array":return[];default:return a}},cr=u(((e,r,t)=>t.replace(e,r))),or=o(((e,r)=>b(r)?r.filter(e):L(Xe,or((([r,t])=>e(t,r))),ce)(r))),ur=e=>{let r,t=!1;return()=>t?r:(t=!0,r=e())},ar=o(((e,r)=>Object.assign({},e,r))),ir=o(((e,r)=>k(Me(e),Me(r)))),lr=o(((e,r)=>v(Me(e),Me(r)))),fr=o(((e,r)=>N(Me(e),Me(r)))),hr=u(((e,r,t)=>$e(e,r(t[e]),t))),br=o(((e,r)=>C(e,Object.assign({},r)))),gr=o(((e,r)=>er(((e,t)=>[e,r[t]]),e))),pr=o(((e,r)=>Re(((e,t,n)=>$e(t,r[n],e)),{},e))),yr=u(((e,r,t)=>er(((r,n)=>e(r,t[n])),r))),dr=(()=>{const e=async(r,t,n)=>{n<t.length&&(await r(t[n]),await e(r,t,++n))};return o(((r,t)=>e(r,t,0)))})(),jr=e=>Promise.all(e),mr=o((async(e,r)=>(await e(r),r))),wr=o(((e,r)=>Promise.all(r.map(e)))),Or=(()=>{const e=async(r,t,n)=>~n?await e(r,await r[n](t),--n):t;return(...r)=>t=>e(r,t,r.length-1)})(),Ar=Y,Sr=Y,kr=Y,vr=te,Nr=ae,xr=_e,Cr=e=>{const r=[],t=[],n=e.length;let s,c,o,u=0,a=0,i=!1,l=J(e),f=!1;for(u=0;u<n;u++)switch(s=e[u],s){case"{":if(!l){i=!0,a=u;break}case"}":if(!l){i=!1,r.push(""),t.push(e.slice(a+1,u));break}default:o=e[u+1],f="\\"===s,i||f&&("{"===o||"}"===o)||(c=r.length-1,c<0&&(r.push(""),c++),r[c]+=s),l=f}return e=>{const n=[],s=r.length-1;for(const c in r)u=+c,n.push(r[u]),u!==s&&n.push(Ge(t[u].split("."),e));return n.join("")}};export{fe as F,le as T,e as __,M as add,Ue as all,Fe as allPass,X as always,_e as any,Ie as anyPass,ae as append,$e as assoc,Be as assocPath,q as bind,tr as both,he as callWith,Me as clone,Qe as cloneShallow,te as complement,L as compose,Or as composeAsync,Ye as concat,Pe as cond,s as curry,o as curry2,u as curry3,T as divide,kr as echo,sr as empty,_ as equals,Ee as explore,or as filter,Ne as find,xe as findIndex,H as flip,rr as forEach,wr as forEachAsync,dr as forEachSerial,Xe as fromPairs,je as genBy,Cr as getTmpl,Oe as gt,Se as gte,J as head,Y as identity,F as ifElse,D as includes,Ce as indexOf,de as intersection,nr as isEmpty,V as isNil,Ze as join,ne as keys,ee as last,W as length,Ae as lt,ke as lte,er as map,br as mapKeys,ur as memoize,ir as mergeDeep,fr as mergeDeepAdd,lr as mergeDeepX,ar as mergeShallow,Ar as mirror,R as multiply,be as noop,re as not,vr as notf,z as nth,We as omit,me as once,hr as overProp,Ge as path,He as pathEq,De as pathOr,Je as pathsEq,Ve as pick,Te as pickBy,Le as prop,qe as propEq,ze as propsEq,Nr as push,w as qappend,O as qassoc,P as qfilter,$ as qindexOf,E as qmap,C as qmapKeys,k as qmergeDeep,N as qmergeDeepAdd,v as qmergeDeepX,x as qmergeShallow,A as qreduce,pe as range,Re as reduce,Sr as reflect,cr as replace,we as reverse,ge as sizeof,G as slice,xr as some,ve as sort,ie as split,Q as subtract,K as tail,U as take,ue as tap,oe as test,y as toLower,ce as toPairs,d as toUpper,Z as trim,j as type,m as typeIs,B as uncurry,ye as uniq,se as values,jr as waitAll,mr as waitTap,I as when,gr as zip,pr as zipObj,yr as zipWith};
